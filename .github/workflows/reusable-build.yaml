name: reusable build

on:
  workflow_call:
    inputs:
      environment:
        description: "The optional environment to use (e.g. for accessing environment secrets)"
        required: false
        type: string
      runner:
        description: "the runner to use"
        default: "ubuntu-latest"
        type: string
        required: false
      project-root:
        description: "the root of the project, default is '.'"
        default: "."
        type: string
        required: false
      build-command:
        description: "some fake build command"
        default: 'echo "building version $IMAGE_VERSION in directory $(pwd)"'
        type: string
        required: false
      debug:
        description: "debug build on runner"
        default: false
        type: boolean
        required: false
    outputs:
      image-version: 
        description: "the image-version. Intended to be used on CI builds only, as this value is caclulated in this workflow. On Release the version is already given as an input paranmeter."
        value: ${{ jobs.build.outputs.image-version }}
      
jobs:
  build:
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    env:
      WORKFLOW_VERSION: v0.6.0
      PROJECT_ROOT: ${{ inputs.project-root }}
      IS_DEPENDABOT: ${{ github.actor == 'dependabot[bot]' }}
      PUSH_DOCKER_IMAGE: ${{ github.event_name != 'pull_request' }}
    outputs:
       image-version: ${{ env.IMAGE_VERSION }}
    steps:

    - name: check strict parameters
      shell: bash
      working-directory: ${{ inputs.project-root }}
      run: |
        echo "checking strict parameters"
        if [[ ( '${{ inputs.debug }}' != 'false' ) ]]; then 
          if [[ '${{ vars.ALLOW_DEBUG }}' ==  'true' ]]; then 
            echo  "DO_DEBUG=true" >> $GITHUB_ENV;
          else
            echo "::error ::you are not authorized to debug"; exit 1; 
          fi
        fi
        
    - id: get-latest-release
      uses: pozetroninc/github-action-get-latest-release@v0.7.0
      with:
        repository: ralfstuckert/workflows-lessons-learned
        excludes: prerelease, draft
    - name: check workflow version
      shell: bash
      working-directory: ${{ inputs.project-root }}
      run: |
        if [[ ( '$WORKFLOW_VERSION' != '${{ steps.get-latest-release.outputs.release }}' ) ]]; then 
          echo "::error ::you are using an outdated workflow version $WORKFLOW_VERSION"; exit 1; 
        fi
      
        
    - uses: actions/checkout@v3
    
    - name: evaluate branch
      shell: bash
      working-directory: ${{ inputs.project-root }}
      run: |
        echo "BRANCH=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV;
        echo "DEFAULT_BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV;

    - name: determine image version
      working-directory: ${{ inputs.project-root }}
      run: |
        echo IMAGE_VERSION=SNAPSHOT-${{ github.run_number }} >> $GITHUB_ENV;

    - name: make commands customizable
      shell: bash
      working-directory: ${{ inputs.project-root }}
      run: |
        ${{ inputs.build-command }}


    - name: Debug
      if: always() && env.DO_DEBUG == 'true'
      uses: mxschmitt/action-tmate@v3
      with:
        timeout-minutes: 15
